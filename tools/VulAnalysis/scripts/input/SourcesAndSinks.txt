<android.location.Location: double getLatitude()> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> _SOURCE_

<android.telephony.TelephonyManager: java.lang.String getDeviceId()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> -> _SOURCE_

<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> -> _SOURCE_
<java.util.Locale: java.lang.String getCountry()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getSSID()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getCid()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getLac()> -> _SOURCE_

<android.media.AudioRecord: int read(short[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(byte[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)> -> _SOURCE_

<android.os.Handler: android.os.Message obtainMessage()> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)> -> _SOURCE_

<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)> -> _SOURCE_
<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()> -> _SOURCE_

<java.net.URLConnection: java.io.OutputStream getOutputStream()> -> _SOURCE_

<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_

<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SINK_
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SINK_

<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_ 
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_ 
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> -> _SINK_ 
<java.net.Socket: void connect(java.net.SocketAddress)> -> _SINK_
<android.os.Handler: boolean sendMessage(android.os.Message)> -> _SINK_

<android.util.Log: int d(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_

<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> -> _SINK_
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_

<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)> -> _SINK_
<android.content.Intent: android.content.Intent setAction(java.lang.String)> -> _SINK_
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.Class)> -> _SINK_
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> -> _SINK_
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)> -> _SINK_

<android.content.Context: void sendBroadcast(android.content.Intent)> -> _SINK_
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)> -> _SINK_
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> -> _SINK_

<java.net.URL: java.net.URLConnection openConnection()> -> _SOURCE_
<java.net.URL: java.net.URLConnection openConnection()> -> _SINK_

<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> -> _SINK_

<android.media.MediaRecorder: void setVideoSource(int)> -> _SINK_
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)> -> _SINK_
<android.media.MediaRecorder: void start()> -> _SINK_

<android.content.IntentFilter: void addAction(java.lang.String)> -> _SINK_

<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_
<java.util.Calendar: java.util.TimeZone getTimeZone()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllBookmarks()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllVisitedUrls()> -> _SOURCE_



<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_

% Do not enter this method as a source. Our callback parameter handling will take care
% of the parameters of this method anyway. Adding this method taints the whole activity!

<android.database.Cursor: java.lang.String getString(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_

<java.lang.ProcessBuilder: java.lang.Process start()> -> _SINK_
